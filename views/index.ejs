<!DOCTYPE html>
<html>
<head>
    <!-- The core Firebase JS SDK is always required and must be listed first -->
    <script src="https://www.gstatic.com/firebasejs/7.24.0/firebase-app.js"></script>
    <script src="https://www.gstatic.com/firebasejs/7.24.0/firebase-auth.js"></script>
</head>

<h1 id="loggedInStatus">You are not yet logged in</h1>
<input id="email" type="email" placeholder="Email"><br>
<input id="password" type="password" placeholder="Password"><br><br>
<button id="login">Login</button>
<button id="signup">SignUp</button>
<button id="logout" style="display:none;">Logout</button>
<button id="googlelogin">Google Login</button>

<script>
    (function () {
    // Your web app's Firebase configuration
    // For Firebase JS SDK v7.20.0 and later, measurementId is optional

    // const firebase = require("firebase/app");

    const firebaseConfig = {
        apiKey: "AIzaSyBzOn-mjYYPlpvDSE_sKlqaxClaVUJr8S0",
        authDomain: "authwithgw26.firebaseapp.com",
        databaseURL: "https://authwithgw26-default-rtdb.firebaseio.com",
        projectId: "authwithgw26",
        storageBucket: "authwithgw26.appspot.com",
        messagingSenderId: "1006168310294",
        appId: "1:1006168310294:web:67f1ed891316d1e221eb37"
    };

    // Initialize Firebase
    firebase.initializeApp(firebaseConfig);

    // get elements
    const email = document.getElementById("email");
    const password = document.getElementById("password");
    const login = document.getElementById("login");
    const signup = document.getElementById("signup");
    const logout = document.getElementById("logout");
    const loggedInStatus = document.getElementById("loggedInStatus");
    const googlelogin = document.getElementById("googlelogin");

    // login
    login.addEventListener("click", (e) => {
        const auth = firebase.auth();
        const promise = auth.signInWithEmailAndPassword(
        email.value,
        password.value
        );
        promise.catch((e) => console.log(e.message));
    });

    // signup
    signup.addEventListener("click", (e) => {
        // TODO: check for real email
        const auth = firebase.auth();
        const promise = auth.createUserWithEmailAndPassword(
        email.value,
        password.value
        );
        promise.catch((e) => console.log(e.message));
    });

    //Google Login
    googlelogin.addEventListener("click", (e) => {
        console.log("google clicked");
        const provider = new firebase.auth.GoogleAuthProvider();
        firebase
        .auth()
        .signInWithPopup(provider)
        .then(function (result) {
            loggedInStatus.innerText = `You are logged in using the following email: ${result.user.email}`;
            login.style.display = "none";
            signup.style.display = "none";
            email.style.display = "none";
            password.style.display = "none";
            googlelogin.style.display = "none";
            logout.style.display = "none";
        })
        .catch(function (error) {
            console.log(error.code);
            console.log(error.message);
        });
    });

    // logout
    logout.addEventListener("click", (e) => {
        firebase.auth().signOut();
    });

    // login state
    firebase.auth().onAuthStateChanged((firebaseUser) => {
        if (firebaseUser) {
        console.log(firebaseUser);
        loggedInStatus.innerText = `You are logged in using the following email: ${result.user.email}`;
        logout.style.display = "inline";
        login.style.display = "none";
        signup.style.display = "none";
        email.style.display = "none";
        password.style.display = "none";
        googlelogin.style.display = "none";
        } else {
        console.log("User is not logged in");
        loggedInStatus.innerText = "You are not yet logged in";
        login.style.display = "inline";
        signup.style.display = "inline";
        email.style.display = "inline";
        googlelogin.style.display = "inline";
        password.style.display = "inline";
        logout.style.display = "none";
        }
    });
})();
</script>
</html>